package rlwe;

/**************************************************************************************************
 *
 * Basic tests for the RLWE key exchange.
 *
 **************************************************************************************************/

import java.math.BigInteger;
import java.util.Arrays;

class RlweTest {

  public static void main (String[] args) {
    RlweKeyExchange kex = new RlweKeyExchange ();
    int i;

    byte[] recData, secretI, secretR;
    byte[][] response;
    RlweKeyPair keysI, keysR;

    long startTime, endTime, totalTime = 0;
    int iterations = 10000;
    int nfailures = 0;

    System.out.println ("\nTesting known test vector");

    RlwePrivateKey s1 = loadTestPrivKey ();
    RingElt s0 = loadTestError ();

    RlwePublicKey correctValue = loadTestPubKey ();
    RlwePublicKey testValue = new RlwePublicKey (s1, s0, kex.getA ());

    testValue.fromFourierDomain ();
    
    if (correctValue.getKey().equals (testValue.getKey()))
      System.out.println ("... Known test vector passed");
    else 
      System.out.println ("... Known test vector failed");
    
    System.out.print ("\nTesting key exchange with randomly generated keys... ");
    
    for (i = 0; i < iterations; i++) {  
      startTime = System.nanoTime();
      keysI = kex.generateKeyPair ();
      keysR = kex.generateKeyPair ();

      response = kex.respAgreement (keysR.getPrivateKey(), keysI.getPublicKey());
      secretR = response[0];
      recData = response[1];
      
      secretI = kex.initAgreement (keysI.getPrivateKey(), keysR.getPublicKey(), recData);
    
      if (Arrays.equals (secretI, secretR)) {
	//System.out.print ("Shared secrets match :)\nShared secret = ");
	//printByteArray (secretI);
	//System.out.println ("\n");
      }

      else {
	System.out.print ("Shared secrets do not match :(\n secretI = ");
	printByteArray (secretI);
	System.out.print ("\n secretR = ");
	printByteArray (secretR);
	System.out.println ("\n");
	nfailures++;
      }
      
      endTime = System.nanoTime();
      totalTime += (endTime - startTime) / 1000;  // convert nanoseconds to microseconds
    }

    System.out.println ("\n" + nfailures + " failed exchanges\n");
    
    System.out.println ("\nTime for " + iterations + " iterations: " + totalTime + " microseconds");
    System.out.println ("Average time = " + (totalTime / iterations) + " microseconds\n");
  }


  public static void printByteArray (byte[] in) {
    System.out.print ("0x");
    for (int i = 0; i < in.length; i++)
      System.out.printf ("%02x ", in[i]);
  }


  public static RlwePublicKey loadTestPubKey () {
    RingElt test = new RingElt (new long[] {
      0x154C, 0x1EC8, 0x0F2A, 0x2C0C, 0x1FA2, 0x0797, 0x1041, 0x1F0E, 
      0x2582, 0x23F0, 0x1088, 0x158F, 0x0455, 0x1FB9, 0x0F2E, 0x1A66, 
      0x2583, 0x0C42, 0x16F8, 0x2617, 0x1C57, 0x2F47, 0x16E6, 0x2A74, 
      0x04FA, 0x02A4, 0x09D4, 0x11A3, 0x2DC8, 0x2425, 0x09D6, 0x1A48, 
      0x2A11, 0x104A, 0x16E9, 0x0417, 0x139F, 0x149F, 0x0FFA, 0x1A3F, 
      0x0ABF, 0x15B4, 0x25AC, 0x0F5B, 0x23FE, 0x0C89, 0x2857, 0x276D, 
      0x0BAC, 0x1609, 0x0199, 0x2596, 0x00B8, 0x175F, 0x197B, 0x2C3C, 
      0x16ED, 0x2FE6, 0x00F9, 0x280D, 0x0278, 0x1C0D, 0x01BF, 0x29D4, 
      0x07D1, 0x0BD3, 0x01E8, 0x0A05, 0x10E2, 0x2ABD, 0x24D0, 0x2044, 
      0x2D38, 0x2707, 0x0C1D, 0x1170, 0x01EA, 0x0D44, 0x1791, 0x119A, 
      0x24DA, 0x100A, 0x1F0B, 0x0159, 0x23BA, 0x2B84, 0x19CA, 0x0C11, 
      0x02CF, 0x0535, 0x1FCC, 0x2EF8, 0x22BE, 0x199A, 0x167B, 0x2001, 
      0x1FB3, 0x1CAD, 0x297F, 0x2DE0, 0x26B1, 0x0A90, 0x12E8, 0x0E1B, 
      0x2798, 0x12BF, 0x0C31, 0x2BB0, 0x0133, 0x2762, 0x1AA2, 0x0952, 
      0x26A1, 0x0647, 0x08B0, 0x0179, 0x13B0, 0x29D5, 0x27BB, 0x17BF, 
      0x0EF2, 0x23A0, 0x21D5, 0x0C42, 0x2D12, 0x2A7C, 0x0B60, 0x1180, 
      0x25A1, 0x030A, 0x21A0, 0x17B1, 0x2BC4, 0x0E2F, 0x21F1, 0x17DB, 
      0x0331, 0x2A6E, 0x2EB3, 0x0686, 0x11EB, 0x2356, 0x26A2, 0x1FE4, 
      0x1C8E, 0x0A70, 0x12ED, 0x0B20, 0x1AB2, 0x247F, 0x2B24, 0x0BA1, 
      0x26D9, 0x2BD0, 0x2E70, 0x23E4, 0x07D9, 0x034A, 0x2CFA, 0x01C2, 
      0x1E3C, 0x2E63, 0x00EE, 0x2510, 0x17CE, 0x2687, 0x1E3B, 0x008F, 
      0x0D48, 0x2A44, 0x2E16, 0x2C69, 0x2B21, 0x181D, 0x0EBA, 0x29C4, 
      0x257E, 0x0F97, 0x2F21, 0x0B44, 0x213B, 0x0D4B, 0x1897, 0x2573, 
      0x161A, 0x0C11, 0x22DF, 0x07FB, 0x0A8A, 0x2C16, 0x2560, 0x1F54, 
      0x2CF1, 0x1A03, 0x131D, 0x0B05, 0x0CE3, 0x08AD, 0x0EA6, 0x07D7, 
      0x13A7, 0x0E0A, 0x0CDA, 0x2C52, 0x02E2, 0x1713, 0x1D92, 0x2169, 
      0x2FEB, 0x033C, 0x2C7D, 0x24E6, 0x18A8, 0x1E55, 0x2DCE, 0x1915, 
      0x0E5C, 0x0898, 0x16AB, 0x21A5, 0x2EF6, 0x2FA4, 0x2B93, 0x250C, 
      0x033B, 0x0977, 0x2965, 0x0097, 0x0942, 0x2A3B, 0x2EBD, 0x2FDA, 
      0x22B1, 0x0B4D, 0x0893, 0x2D8E, 0x0CFC, 0x08BE, 0x2A13, 0x2647, 
      0x00D8, 0x16DC, 0x09D8, 0x28C3, 0x1274, 0x1FF0, 0x07D9, 0x0495, 
      0x1924, 0x0818, 0x1C62, 0x28FC, 0x0F94, 0x2480, 0x2353, 0x0C15, 
      0x0E09, 0x00C6, 0x1D83, 0x14F5, 0x0C93, 0x2DB7, 0x2EE9, 0x0ECF, 
      0x26D9, 0x25A8, 0x23B1, 0x2DDB, 0x0377, 0x2309, 0x10CA, 0x0EA4, 
      0x0C88, 0x1F30, 0x0C18, 0x210A, 0x0AF9, 0x2E04, 0x0F0E, 0x16FA, 
      0x12D7, 0x1790, 0x07DA, 0x13E0, 0x2064, 0x1FFA, 0x1144, 0x142A, 
      0x1384, 0x2376, 0x2A5D, 0x03BA, 0x1071, 0x211F, 0x2B5D, 0x1EFD, 
      0x15C8, 0x05A2, 0x1253, 0x1FF4, 0x181D, 0x1161, 0x2ED9, 0x2E23, 
      0x120F, 0x1CAC, 0x2CB6, 0x2937, 0x1A6B, 0x2314, 0x2385, 0x29D6, 
      0x2F94, 0x1E6B, 0x0584, 0x0E66, 0x2794, 0x28CA, 0x0E70, 0x06B8, 
      0x2691, 0x091F, 0x0F88, 0x0126, 0x124D, 0x2FC9, 0x06F8, 0x0CA8, 
      0x29FD, 0x07FC, 0x1257, 0x253D, 0x1522, 0x1022, 0x2086, 0x1992, 
      0x0C6F, 0x03DD, 0x0AC6, 0x1511, 0x172D, 0x2386, 0x21DB, 0x039E, 
      0x23D6, 0x1B65, 0x0BF0, 0x19FD, 0x154A, 0x18A5, 0x0F30, 0x2BA4, 
      0x0334, 0x0C78, 0x1C14, 0x13CF, 0x2A22, 0x2F46, 0x2B98, 0x2D3C, 
      0x1208, 0x1287, 0x1D22, 0x1F74, 0x0995, 0x00E3, 0x1657, 0x1DC4, 
      0x21C4, 0x2DBA, 0x137F, 0x2E0E, 0x236B, 0x24A3, 0x07ED, 0x2C06, 
      0x1EDC, 0x0FC0, 0x1DBD, 0x24B8, 0x04F4, 0x1A99, 0x02F7, 0x2CC4, 
      0x1069, 0x005B, 0x2A1F, 0x25AA, 0x2034, 0x2AF4, 0x1139, 0x296C, 
      0x23A5, 0x23A1, 0x1318, 0x2669, 0x0AD0, 0x0C94, 0x004B, 0x0AAD, 
      0x188F, 0x28CB, 0x20E2, 0x1A63, 0x0E95, 0x2796, 0x1A17, 0x16BB, 
      0x085F, 0x1A1A, 0x0C26, 0x1E6B, 0x06F9, 0x1927, 0x1956, 0x2433, 
      0x06D3, 0x1647, 0x280C, 0x1B9E, 0x004F, 0x1CD2, 0x2149, 0x2E9C, 
      0x0A18, 0x2D7D, 0x0F9F, 0x0EB8, 0x111C, 0x0B31, 0x0DE3, 0x06B4, 
      0x2309, 0x1478, 0x1217, 0x0782, 0x0AE9, 0x0BB6, 0x1086, 0x1C40, 
      0x2A82, 0x1A3F, 0x1EB5, 0x2346, 0x1BAD, 0x2D50, 0x0DF2, 0x2128, 
      0x04B3, 0x2C80, 0x1DD5, 0x2FC9, 0x2CFB, 0x1FA4, 0x154E, 0x0F4E, 
      0x0F7C, 0x2766, 0x2C63, 0x26DC, 0x0FE0, 0x2729, 0x1103, 0x155F, 
      0x00E9, 0x1EB9, 0x10FF, 0x0DF3, 0x2074, 0x1A57, 0x1294, 0x17FF, 
      0x1704, 0x26A4, 0x108A, 0x2662, 0x0B45, 0x0B0A, 0x0E32, 0x2710, 
      0x0171, 0x1104, 0x1A42, 0x2A75, 0x0D0A, 0x1214, 0x0339, 0x297D, 
      0x1CC1, 0x041A, 0x0FF4, 0x2027, 0x0C2B, 0x2070, 0x2C3B, 0x1337, 
      0x1C29, 0x20FB, 0x0A9F, 0x001D, 0x27F3, 0x0F1E, 0x020F, 0x0B91, 
      0x1DC2, 0x0CE6, 0x2CA2, 0x0076, 0x2C8B, 0x22C6, 0x2C78, 0x1772, 
      0x17D8, 0x09F9, 0x2A2F, 0x108B, 0x1298, 0x239B, 0x05CA, 0x0DFE, 
      0x1B0A, 0x133A, 0x0F94, 0x2633, 0x15AB, 0x0A66, 0x027C, 0x2D8C, 
      0x004C, 0x0642, 0x234A, 0x0F25, 0x263B, 0x19F1, 0x090F, 0x2D14, 
      0x2B31, 0x2A35, 0x0FF2, 0x03BB, 0x1B75, 0x0E30, 0x283F, 0x28B3, 
      0x1B26, 0x0BAB, 0x136D, 0x2B11, 0x1451, 0x0517, 0x1943, 0x1EF3, 
      0x21AB, 0x0337, 0x0766, 0x121E, 0x017C, 0x07E3, 0x239E, 0x2807, 
      0x2073, 0x14B3, 0x228B, 0x1900, 0x0511, 0x1EF1, 0x0BB1, 0x048A, 
      0x1D70, 0x271A, 0x24C3, 0x003D, 0x16AE, 0x2FB9, 0x0649, 0x0755, 
      0x06DD, 0x2EA3, 0x18FD, 0x1653, 0x26C8, 0x0EFE, 0x22F3, 0x0D01, 
      0x1A4C, 0x0954, 0x1774, 0x2492, 0x1561, 0x05CB, 0x21AE, 0x2AF3, 
      0x1537, 0x0B59, 0x0763, 0x12A5, 0x25EB, 0x01F2, 0x0E4C, 0x037E, 
      0x107B, 0x22C5, 0x1385, 0x0B3F, 0x0407, 0x1520, 0x150F, 0x0AAC, 
      0x1ABB, 0x16C3, 0x1898, 0x2AFB, 0x2DBE, 0x0993, 0x1F2E, 0x2A91, 
      0x2B2C, 0x1DA0, 0x0989, 0x27D3, 0x23D2, 0x2D66, 0x0148, 0x17A0, 
      0x1656, 0x0B87, 0x0AA2, 0x2509, 0x2AEC, 0x21C5, 0x047B, 0x1598, 
      0x04D6, 0x0601, 0x1D37, 0x2F46, 0x1DD3, 0x28ED, 0x268F, 0x209A, 
      0x091F, 0x2AB2, 0x2265, 0x1262, 0x2FB6, 0x01F7, 0x012D, 0x0D8F, 
      0x26B7, 0x1F8D, 0x1597, 0x1860, 0x1A2F, 0x2299, 0x056B, 0x17AA, 
      0x2273, 0x292A, 0x100B, 0x2CCF, 0x02A8, 0x1EF8, 0x0558, 0x17F7, 
      0x20AE, 0x218A, 0x0470, 0x0CB4, 0x01EE, 0x0694, 0x1880, 0x0EDB, 
      0x2E94, 0x0BF5, 0x23CD, 0x0B54, 0x08BF, 0x0E2B, 0x2A15, 0x0E6C, 
      0x19C1, 0x0622, 0x2429, 0x1AE4, 0x2061, 0x0C52, 0x1BFC, 0x00E3, 
      0x13AA, 0x24C2, 0x2BA4, 0x174B, 0x0FDF, 0x19C0, 0x26AB, 0x0E98, 
      0x0AEF, 0x1F93, 0x02C6, 0x12A9, 0x1E13, 0x0ADA, 0x2B95, 0x2F09, 
      0x0DEE, 0x08D5, 0x1A24, 0x25F7, 0x2EC3, 0x1271, 0x231C, 0x04AF, 
      0x2FBA, 0x2FA6, 0x1214, 0x2A0D, 0x2B29, 0x159A, 0x1C74, 0x0C67, 
      0x2ED2, 0x09E9, 0x2DE1, 0x021B, 0x18F3, 0x252A, 0x2B62, 0x2BAC, 
      0x1C2A, 0x20E6, 0x2D79, 0x25A8, 0x1551, 0x2058, 0x24F1, 0x2C1D, 
      0x2DC5, 0x063B, 0x2367, 0x1A5F, 0x1C91, 0x1A4B, 0x27C1, 0x12B2, 
      0x2A07, 0x103E, 0x0896, 0x0E20, 0x2F61, 0x1751, 0x1B9F, 0x1D6D, 
      0x02F7, 0x1051, 0x1CA0, 0x0631, 0x0D80, 0x2F1C, 0x1559, 0x0B2F, 
      0x260B, 0x2B4A, 0x2BE7, 0x295A, 0x12C9, 0x1974, 0x04B6, 0x10AB, 
      0x10B2, 0x0C98, 0x103D, 0x0826, 0x1307, 0x02E5, 0x1C98, 0x09DC, 
      0x08F4, 0x14F5, 0x0BFA, 0x1DC9, 0x0243, 0x0A86, 0x1DE1, 0x2EA3, 
      0x0D92, 0x2480, 0x1B54, 0x298A, 0x2157, 0x0DA1, 0x058E, 0x0D73, 
      0x1DBC, 0x02D6, 0x0405, 0x0993, 0x1C07, 0x0745, 0x0F1A, 0x06EB, 
      0x250D, 0x2F2A, 0x2C82, 0x2E7D, 0x1D7B, 0x198A, 0x10D7, 0x121C, 
      0x2136, 0x0B2E, 0x26A8, 0x0BEA, 0x0EDC, 0x1052, 0x140A, 0x1E85, 
      0x1DB5, 0x20AB, 0x1252, 0x2D77, 0x1AEC, 0x007F, 0x0B3D, 0x225B, 
      0x1262, 0x0AC8, 0x2ADF, 0x227A, 0x09CC, 0x0717, 0x28C9, 0x0A3D, 
      0x1CAF, 0x1BFF, 0x2227, 0x1E0D, 0x0B34, 0x0E95, 0x2355, 0x29F1, 
      0x229E, 0x0F49, 0x295F, 0x2076, 0x0BE1, 0x2F2C, 0x06A0, 0x16D7, 
      0x04BC, 0x1D7B, 0x0494, 0x1900, 0x0F7D, 0x292D, 0x0DFA, 0x24DF, 
      0x11A6, 0x2E41, 0x211F, 0x023F, 0x244E, 0x06D8, 0x2465, 0x269D, 
      0x1240, 0x1B59, 0x272E, 0x2D09, 0x01B6, 0x2EB4, 0x0644, 0x02FE, 
      0x1DED, 0x1A57, 0x072F, 0x0F20, 0x109A, 0x237E, 0x0B1B, 0x07C7, 
      0x1901, 0x19A6, 0x077A, 0x269D, 0x1F5B, 0x16E6, 0x1AA7, 0x16F9, 
      0x233D, 0x13E8, 0x159B, 0x0EB5, 0x08A5, 0x0A77, 0x2D38, 0x04AC, 
      0x077C, 0x2C58, 0x04EE, 0x1242, 0x1E1F, 0x0D26, 0x27B0, 0x1EF8, 
      0x256E, 0x2782, 0x04E0, 0x0A8D, 0x0A35, 0x2FE4, 0x0586, 0x06E1, 
      0x0C69, 0x0005, 0x2E6F, 0x26BF, 0x2C5D, 0x0629, 0x2A85, 0x028A, 
      0x1B4F, 0x2432, 0x224A, 0x01F7, 0x2A3D, 0x0E3D, 0x104F, 0x05E7, 
      0x0CE2, 0x0693, 0x2231, 0x2BAE, 0x0793, 0x13FD, 0x2B66, 0x2960, 
      0x243D, 0x1127, 0x21E8, 0x1DF0, 0x2AD4, 0x02E9, 0x1C1F, 0x2126, 
      0x2D82, 0x0AE8, 0x1B7F, 0x16DA, 0x238F, 0x0987, 0x2AC7, 0x00BC, 
      0x0258, 0x213C, 0x0532, 0x2328, 0x18D4, 0x1B16, 0x0CE9, 0x0F12, 
      0x2690, 0x2145, 0x0170, 0x1B54, 0x0C70, 0x1979, 0x05E4, 0x2A05, 
      0x133B, 0x0736, 0x0678, 0x28D1, 0x10FD, 0x1E06, 0x13FD, 0x0DD6, 
      0x051A, 0x07C6, 0x2768, 0x1625, 0x1EE0, 0x0781, 0x02B2, 0x0B5B, 
      0x234F, 0x2A2F, 0x1D8A, 0x1D8E, 0x134F, 0x2E4E, 0x1890, 0x0959, 
      0x028B, 0x2A96, 0x07E3, 0x2200, 0x1CEF, 0x04BA, 0x2D40, 0x113F, 
      0x0FA4, 0x01FD, 0x00CA, 0x1770, 0x2232, 0x1179, 0x11A5, 0x1CC1, 
      0x0B59, 0x2B72, 0x11F8, 0x2524, 0x1B04, 0x04FC, 0x0379, 0x0FE0, 
      0x296F, 0x07BB, 0x26D1, 0x05BC, 0x21F9, 0x2127, 0x2B04, 0x1E11 } );
    
    return new RlwePublicKey (test, Constants.ORDINARY);
  }


  public static RingElt loadTestError () {
    return new RingElt (new long[] {
      0x0003, 0x2FFF, 0x2FFF, 0x2FFF, 0x0000, 0x2FFC, 0x2FFF, 0x0003, 
      0x0003, 0x0001, 0x0000, 0x2FFA, 0x2FFA, 0x0000, 0x2FFF, 0x0005, 
      0x0000, 0x0001, 0x0001, 0x0004, 0x3000, 0x0000, 0x0001, 0x0001, 
      0x0004, 0x0000, 0x2FFC, 0x2FFE, 0x3000, 0x0000, 0x0001, 0x0001, 
      0x0000, 0x2FFD, 0x0003, 0x0000, 0x2FFB, 0x0004, 0x2FFE, 0x2FFA, 
      0x2FFE, 0x0002, 0x0000, 0x0004, 0x2FFB, 0x0002, 0x2FFE, 0x3000, 
      0x0002, 0x0004, 0x0000, 0x0002, 0x3000, 0x2FFD, 0x0004, 0x0001, 
      0x0003, 0x2FFD, 0x0004, 0x0006, 0x2FFB, 0x0001, 0x0001, 0x0001, 
      0x2FFB, 0x2FFE, 0x0001, 0x0005, 0x0003, 0x2FFF, 0x0001, 0x0000, 
      0x2FFF, 0x0000, 0x0002, 0x0003, 0x3000, 0x0006, 0x0001, 0x0000, 
      0x3000, 0x0003, 0x0004, 0x2FFF, 0x2FFD, 0x0000, 0x2FFE, 0x2FFF, 
      0x2FFD, 0x2FFE, 0x2FFD, 0x0000, 0x0003, 0x2FFF, 0x0002, 0x0004, 
      0x0003, 0x0001, 0x2FFF, 0x0003, 0x0002, 0x3000, 0x0001, 0x3000, 
      0x3000, 0x3000, 0x0005, 0x2FF9, 0x0002, 0x3000, 0x0002, 0x2FFF, 
      0x0000, 0x0001, 0x2FFE, 0x0002, 0x3000, 0x0000, 0x0001, 0x0002, 
      0x3000, 0x2FFF, 0x2FFD, 0x3000, 0x0003, 0x0000, 0x2FFF, 0x0002, 
      0x2FFE, 0x2FFD, 0x0000, 0x0002, 0x0006, 0x0001, 0x2FFF, 0x2FFE, 
      0x0001, 0x2FFF, 0x0001, 0x2FFF, 0x2FFD, 0x2FFD, 0x0001, 0x0000, 
      0x3000, 0x3000, 0x0000, 0x0002, 0x2FFE, 0x2FFC, 0x2FFF, 0x2FFF, 
      0x0000, 0x3000, 0x2FFD, 0x2FFD, 0x0000, 0x0003, 0x0002, 0x0004, 
      0x2FFC, 0x2FFE, 0x2FFF, 0x3000, 0x0003, 0x2FFF, 0x0000, 0x0002, 
      0x0000, 0x2FFE, 0x2FFE, 0x2FFE, 0x0000, 0x3000, 0x0002, 0x0000, 
      0x0002, 0x3000, 0x3000, 0x0001, 0x0004, 0x0003, 0x3000, 0x0002, 
      0x0002, 0x3000, 0x0005, 0x0000, 0x0003, 0x0000, 0x2FFF, 0x0000, 
      0x0003, 0x0000, 0x0000, 0x0005, 0x3000, 0x0000, 0x2FFF, 0x0000, 
      0x0004, 0x2FFE, 0x2FFE, 0x2FFE, 0x0000, 0x0002, 0x0002, 0x0004, 
      0x3000, 0x2FFD, 0x0001, 0x0002, 0x2FFD, 0x0002, 0x2FFF, 0x0005, 
      0x0001, 0x2FFF, 0x2FFF, 0x3000, 0x2FFF, 0x0006, 0x2FFD, 0x0004, 
      0x0001, 0x2FFF, 0x0001, 0x3000, 0x3000, 0x2FFD, 0x2FFF, 0x2FFF, 
      0x3000, 0x0000, 0x2FFF, 0x2FFC, 0x3000, 0x2FFD, 0x0005, 0x2FFE, 
      0x0000, 0x0000, 0x2FFE, 0x2FFF, 0x0000, 0x0003, 0x0001, 0x3000, 
      0x0001, 0x0001, 0x3000, 0x0002, 0x0000, 0x0003, 0x2FFD, 0x0000, 
      0x3000, 0x0004, 0x2FFF, 0x2FFC, 0x0000, 0x0001, 0x0004, 0x2FFD, 
      0x0000, 0x2FFE, 0x0008, 0x3000, 0x3000, 0x0000, 0x0001, 0x2FFF, 
      0x0001, 0x0005, 0x2FFE, 0x3000, 0x3000, 0x3000, 0x0001, 0x2FFF, 
      0x0000, 0x2FFD, 0x2FFE, 0x2FFF, 0x2FFD, 0x0005, 0x0005, 0x0003, 
      0x2FFD, 0x2FFF, 0x0005, 0x0004, 0x0000, 0x2FFF, 0x2FFD, 0x0001, 
      0x0001, 0x2FFF, 0x0002, 0x0003, 0x0001, 0x0000, 0x2FFF, 0x0000, 
      0x2FFE, 0x0002, 0x3000, 0x0002, 0x2FFE, 0x0003, 0x0000, 0x0001, 
      0x0002, 0x2FFD, 0x0000, 0x2FFE, 0x0003, 0x0004, 0x2FFE, 0x3000, 
      0x0001, 0x0002, 0x0005, 0x0000, 0x3000, 0x0000, 0x0001, 0x3000, 
      0x0002, 0x0001, 0x2FFC, 0x2FFE, 0x0004, 0x0006, 0x0005, 0x0000, 
      0x0004, 0x3000, 0x2FFF, 0x2FFE, 0x0000, 0x0004, 0x2FFD, 0x0004, 
      0x2FFF, 0x2FFF, 0x0000, 0x3000, 0x2FFD, 0x0007, 0x2FFE, 0x0002, 
      0x0001, 0x0009, 0x2FFF, 0x2FFE, 0x0000, 0x2FFF, 0x3000, 0x2FFB, 
      0x2FFE, 0x2FFF, 0x0000, 0x0006, 0x3000, 0x0001, 0x0000, 0x2FFF, 
      0x0000, 0x0000, 0x0002, 0x3000, 0x3000, 0x3000, 0x0005, 0x0005, 
      0x0001, 0x0003, 0x0000, 0x0000, 0x0003, 0x3000, 0x0001, 0x0001, 
      0x2FFE, 0x0004, 0x2FFF, 0x2FFA, 0x2FFF, 0x0002, 0x0002, 0x2FFF, 
      0x0006, 0x0002, 0x0000, 0x0003, 0x0000, 0x0002, 0x0002, 0x2FFF, 
      0x2FFC, 0x0001, 0x0002, 0x0003, 0x0004, 0x0000, 0x0002, 0x2FFE, 
      0x0001, 0x2FFB, 0x2FFD, 0x3000, 0x0000, 0x3000, 0x0000, 0x3000, 
      0x0001, 0x2FFF, 0x2FFE, 0x2FFF, 0x2FFE, 0x0001, 0x0000, 0x0002, 
      0x2FFE, 0x0000, 0x0005, 0x0001, 0x2FFF, 0x2FFA, 0x0001, 0x2FFD, 
      0x2FFF, 0x0003, 0x2FFE, 0x0002, 0x3000, 0x2FFF, 0x2FFC, 0x2FFE, 
      0x3000, 0x0004, 0x3000, 0x0005, 0x0000, 0x0000, 0x0003, 0x2FFF, 
      0x2FFE, 0x0003, 0x3000, 0x0001, 0x3000, 0x3000, 0x2FFF, 0x2FFF, 
      0x3000, 0x2FFD, 0x0001, 0x3000, 0x2FFB, 0x2FFC, 0x2FFF, 0x0001, 
      0x2FFF, 0x2FFC, 0x2FFF, 0x0001, 0x0006, 0x0004, 0x3000, 0x2FFF, 
      0x3000, 0x0001, 0x0006, 0x0000, 0x0005, 0x2FFF, 0x0003, 0x0001, 
      0x3000, 0x3000, 0x2FFE, 0x2FFF, 0x0004, 0x3000, 0x0000, 0x3000, 
      0x2FFB, 0x0003, 0x2FFC, 0x3000, 0x0002, 0x2FFD, 0x0001, 0x0001, 
      0x2FFE, 0x0003, 0x0004, 0x2FFF, 0x2FFF, 0x2FFD, 0x0000, 0x0005, 
      0x2FFF, 0x2FFD, 0x0002, 0x0000, 0x3000, 0x0000, 0x0001, 0x0002, 
      0x3000, 0x2FFE, 0x2FFE, 0x2FFE, 0x0004, 0x0002, 0x0002, 0x2FFF, 
      0x0002, 0x0002, 0x2FFF, 0x0004, 0x3000, 0x0003, 0x0003, 0x0002, 
      0x0000, 0x3000, 0x2FFE, 0x2FFD, 0x2FFE, 0x2FFD, 0x2FFF, 0x0002, 
      0x0003, 0x0003, 0x2FFC, 0x0000, 0x2FFF, 0x0004, 0x2FFE, 0x0001, 
      0x2FFF, 0x0004, 0x3000, 0x2FFF, 0x0001, 0x0003, 0x0000, 0x0001, 
      0x0006, 0x0005, 0x0004, 0x0006, 0x0003, 0x0001, 0x0005, 0x0001, 
      0x0001, 0x0000, 0x2FFF, 0x2FFD, 0x2FFB, 0x3000, 0x0007, 0x3000, 
      0x0001, 0x0001, 0x0000, 0x0000, 0x0003, 0x0000, 0x2FFF, 0x2FFE, 
      0x0002, 0x2FFC, 0x0005, 0x0000, 0x0008, 0x2FFD, 0x0005, 0x0002, 
      0x0000, 0x0001, 0x2FFF, 0x2FFD, 0x0001, 0x2FFD, 0x0000, 0x0003, 
      0x2FFF, 0x3000, 0x3000, 0x3000, 0x3000, 0x2FFE, 0x2FFF, 0x0004, 
      0x0002, 0x0003, 0x3000, 0x2FFD, 0x2FFC, 0x0000, 0x2FFF, 0x3000, 
      0x3000, 0x0003, 0x0000, 0x2FFF, 0x0001, 0x2FFE, 0x2FFC, 0x0007, 
      0x2FFF, 0x3000, 0x0000, 0x0001, 0x0002, 0x0001, 0x0001, 0x0000, 
      0x0002, 0x0004, 0x2FFE, 0x3000, 0x0002, 0x2FFF, 0x2FFD, 0x3000, 
      0x3000, 0x2FFE, 0x0000, 0x0004, 0x0004, 0x0001, 0x0005, 0x0000, 
      0x3000, 0x3000, 0x0000, 0x3000, 0x0003, 0x0002, 0x2FFD, 0x0002, 
      0x0000, 0x2FFF, 0x3000, 0x0000, 0x0001, 0x0000, 0x0001, 0x2FFE, 
      0x2FFD, 0x0001, 0x2FFD, 0x2FFF, 0x0000, 0x0001, 0x0000, 0x0006, 
      0x3000, 0x0000, 0x2FFC, 0x0002, 0x2FFF, 0x0000, 0x2FFF, 0x2FFE, 
      0x0001, 0x2FFB, 0x2FFE, 0x0004, 0x0005, 0x0000, 0x2FFE, 0x3000, 
      0x0002, 0x0002, 0x0003, 0x0005, 0x2FFF, 0x0002, 0x0002, 0x0000, 
      0x2FFE, 0x0002, 0x0000, 0x0005, 0x0003, 0x0000, 0x0000, 0x0000, 
      0x3000, 0x0000, 0x2FFE, 0x3000, 0x3000, 0x0003, 0x3000, 0x0002, 
      0x3000, 0x0004, 0x0004, 0x0000, 0x0000, 0x0002, 0x2FFE, 0x2FFF, 
      0x0000, 0x0002, 0x2FFD, 0x2FFD, 0x3000, 0x3000, 0x0001, 0x0006, 
      0x0001, 0x2FFF, 0x0000, 0x0000, 0x0006, 0x0001, 0x0000, 0x3000, 
      0x0000, 0x3000, 0x0003, 0x2FFF, 0x2FFA, 0x0002, 0x0004, 0x0001, 
      0x2FFE, 0x2FFD, 0x2FFD, 0x3000, 0x0001, 0x0005, 0x3000, 0x0002, 
      0x0001, 0x2FFE, 0x0003, 0x2FFE, 0x0002, 0x0001, 0x2FFF, 0x2FFF, 
      0x2FFE, 0x2FFF, 0x0000, 0x0003, 0x0004, 0x3000, 0x0004, 0x2FFE, 
      0x0008, 0x3000, 0x2FFF, 0x2FFF, 0x0001, 0x0006, 0x0001, 0x3000, 
      0x2FFE, 0x0003, 0x0000, 0x0001, 0x0002, 0x3000, 0x3000, 0x3000, 
      0x0004, 0x0002, 0x0002, 0x0003, 0x0001, 0x2FFD, 0x0000, 0x0000, 
      0x0000, 0x0004, 0x0003, 0x3000, 0x0004, 0x2FFF, 0x0004, 0x2FFE, 
      0x2FFE, 0x0000, 0x0001, 0x0000, 0x0004, 0x2FFD, 0x0003, 0x2FFE, 
      0x3000, 0x0005, 0x0002, 0x0000, 0x0000, 0x2FFE, 0x0004, 0x0000, 
      0x3000, 0x0001, 0x2FFF, 0x0005, 0x0000, 0x0001, 0x2FFF, 0x2FFE, 
      0x0000, 0x2FFF, 0x3000, 0x0001, 0x0004, 0x2FFD, 0x0004, 0x0000, 
      0x2FFF, 0x2FFF, 0x0003, 0x0002, 0x0000, 0x0003, 0x0003, 0x0004, 
      0x0000, 0x0002, 0x0000, 0x2FFF, 0x0004, 0x0002, 0x0001, 0x0000, 
      0x2FFD, 0x0000, 0x0000, 0x2FFC, 0x0003, 0x0002, 0x2FFD, 0x0001, 
      0x0002, 0x0005, 0x0009, 0x0007, 0x2FFD, 0x0002, 0x3000, 0x0001, 
      0x0000, 0x0001, 0x3000, 0x2FFE, 0x2FFF, 0x3000, 0x0002, 0x2FFF, 
      0x0003, 0x0003, 0x0005, 0x2FF9, 0x0001, 0x2FFD, 0x0001, 0x3000, 
      0x0002, 0x0002, 0x0001, 0x2FFC, 0x2FFD, 0x0003, 0x2FFD, 0x0001, 
      0x2FFF, 0x0004, 0x0001, 0x3000, 0x0003, 0x0003, 0x2FFF, 0x3000, 
      0x0002, 0x0000, 0x2FFD, 0x0003, 0x0002, 0x2FFD, 0x3000, 0x3000, 
      0x2FFE, 0x3000, 0x0000, 0x2FFF, 0x2FFC, 0x0000, 0x3000, 0x3000, 
      0x0003, 0x2FFF, 0x0003, 0x2FFF, 0x0001, 0x0001, 0x2FFB, 0x2FFB, 
      0x0000, 0x0003, 0x0000, 0x0005, 0x0003, 0x3000, 0x2FFE, 0x0006, 
      0x0002, 0x2FFF, 0x0005, 0x0000, 0x2FFF, 0x2FFD, 0x0002, 0x2FFD, 
      0x2FFF, 0x3000, 0x0001, 0x0005, 0x2FFC, 0x2FFF, 0x3000, 0x0001, 
      0x0002, 0x2FFC, 0x0000, 0x0001, 0x2FFE, 0x0000, 0x0004, 0x0005, 
      0x2FFF, 0x0000, 0x0002, 0x0001, 0x2FFE, 0x0003, 0x2FFE, 0x2FFF, 
      0x0000, 0x0002, 0x2FFF, 0x3000, 0x0001, 0x2FFE, 0x0001, 0x0002, 
      0x2FFC, 0x0001, 0x2FFE, 0x0005, 0x0000, 0x3000, 0x0001, 0x2FFD, 
      0x2FFF, 0x2FFE, 0x2FFF, 0x2FFE, 0x0001, 0x2FFF, 0x0002, 0x0001, 
      0x2FFD, 0x0000, 0x0003, 0x0009, 0x0000, 0x0003, 0x2FFE, 0x2FFD, 
      0x0000, 0x0002, 0x0002, 0x0002, 0x0005, 0x2FFC, 0x0003, 0x0001, 
      0x2FFD, 0x0001, 0x0000, 0x2FFF, 0x2FFE, 0x2FFF, 0x0000, 0x2FFD, 
      0x0001, 0x0000, 0x3000, 0x0005, 0x2FFC, 0x0004, 0x3000, 0x2FFD, 
      0x0000, 0x0000, 0x0000, 0x2FFB, 0x0001, 0x0003, 0x2FFD, 0x0001, 
      0x0003, 0x0003, 0x0001, 0x2FFD, 0x0003, 0x0001, 0x2FFD, 0x0002 } );
  }


  static public RlwePrivateKey loadTestPrivKey () {
    RingElt test = new RingElt (new long[] {
      0x0000, 0x2FFF, 0x0006, 0x0001, 0x0004, 0x3000, 0x0000, 0x0002,
      0x2FFF, 0x0003, 0x3000, 0x3000, 0x0004, 0x0003, 0x3000, 0x0001, 
      0x0004, 0x3000, 0x0001, 0x0003, 0x0000, 0x2FFE, 0x0004, 0x0000, 
      0x0003, 0x0002, 0x2FF8, 0x0000, 0x3000, 0x3000, 0x2FFB, 0x0002, 
      0x0000, 0x0007, 0x2FFF, 0x2FFD, 0x0001, 0x0004, 0x3000, 0x0002, 
      0x0003, 0x0002, 0x0004, 0x0000, 0x2FFE, 0x0001, 0x2FFC, 0x0002, 
      0x3000, 0x0003, 0x0007, 0x0003, 0x0003, 0x0000, 0x0000, 0x0006, 
      0x0000, 0x3000, 0x0007, 0x0004, 0x0003, 0x0002, 0x0005, 0x0002, 
      0x0007, 0x0000, 0x0002, 0x3000, 0x2FFF, 0x0005, 0x0002, 0x2FFE, 
      0x3000, 0x2FFF, 0x0005, 0x2FFF, 0x0001, 0x0004, 0x3000, 0x0002, 
      0x0000, 0x3000, 0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x3000, 
      0x3000, 0x0002, 0x0004, 0x2FFE, 0x0001, 0x2FFE, 0x0001, 0x3000, 
      0x2FFE, 0x0000, 0x0001, 0x0000, 0x0000, 0x2FFD, 0x2FFB, 0x2FFE, 
      0x0000, 0x2FFD, 0x3000, 0x0001, 0x0002, 0x2FFA, 0x0003, 0x2FFF, 
      0x3000, 0x2FFD, 0x0000, 0x0005, 0x2FFC, 0x0000, 0x2FFE, 0x0002, 
      0x2FFD, 0x0003, 0x0000, 0x0000, 0x0001, 0x2FFD, 0x3000, 0x2FFF, 
      0x0004, 0x0005, 0x0000, 0x0004, 0x2FFE, 0x0002, 0x0002, 0x0001, 
      0x0002, 0x2FFF, 0x3000, 0x0003, 0x0006, 0x0003, 0x0004, 0x0001, 
      0x0003, 0x2FFE, 0x3000, 0x0000, 0x2FFE, 0x0001, 0x0001, 0x0003, 
      0x0005, 0x3000, 0x3000, 0x0000, 0x2FFC, 0x2FFE, 0x2FFE, 0x0000, 
      0x2FFE, 0x2FFE, 0x0001, 0x2FFC, 0x0000, 0x3000, 0x3000, 0x3000, 
      0x0000, 0x2FFE, 0x0005, 0x3000, 0x0000, 0x0003, 0x0004, 0x3000, 
      0x3000, 0x0004, 0x0003, 0x0001, 0x0000, 0x2FFF, 0x0003, 0x2FFE, 
      0x2FFF, 0x0003, 0x0005, 0x0002, 0x2FFD, 0x0001, 0x0002, 0x0002, 
      0x2FFD, 0x2FFC, 0x0004, 0x0002, 0x3000, 0x0002, 0x3000, 0x2FFE, 
      0x0001, 0x0003, 0x2FFF, 0x3000, 0x0004, 0x2FFF, 0x0005, 0x2FFC, 
      0x0001, 0x0005, 0x0000, 0x0002, 0x2FFD, 0x0000, 0x0003, 0x2FFC, 
      0x0002, 0x3000, 0x0001, 0x0000, 0x0001, 0x3000, 0x0004, 0x2FFF, 
      0x0001, 0x0004, 0x0001, 0x2FFE, 0x0004, 0x0003, 0x0002, 0x2FFD, 
      0x3000, 0x2FFC, 0x2FFF, 0x0006, 0x0004, 0x0000, 0x0003, 0x0007, 
      0x0002, 0x2FFD, 0x2FFF, 0x2FFF, 0x2FFE, 0x0000, 0x0005, 0x3000, 
      0x0000, 0x0000, 0x0000, 0x0003, 0x0003, 0x0003, 0x0002, 0x0001, 
      0x3000, 0x0002, 0x2FFD, 0x0004, 0x2FFF, 0x2FFD, 0x0001, 0x0000, 
      0x3000, 0x0005, 0x3000, 0x2FFE, 0x0005, 0x0005, 0x0004, 0x0000, 
      0x0002, 0x0007, 0x0004, 0x0004, 0x3000, 0x3000, 0x0000, 0x0000, 
      0x2FFC, 0x0001, 0x0002, 0x0002, 0x2FFE, 0x0001, 0x3000, 0x0000, 
      0x2FFF, 0x0002, 0x0003, 0x0000, 0x0000, 0x3000, 0x0003, 0x2FFD, 
      0x0002, 0x0003, 0x2FFD, 0x2FFA, 0x0000, 0x2FFD, 0x3000, 0x2FFD, 
      0x2FFF, 0x0002, 0x0000, 0x0005, 0x3000, 0x0000, 0x0004, 0x0004, 
      0x2FFF, 0x0000, 0x0000, 0x0002, 0x0000, 0x2FFE, 0x0001, 0x2FFD, 
      0x0000, 0x0002, 0x0002, 0x0004, 0x2FFB, 0x0002, 0x0001, 0x0002, 
      0x0001, 0x2FFE, 0x0004, 0x0007, 0x2FFD, 0x0001, 0x3000, 0x3000, 
      0x2FFE, 0x2FFF, 0x2FFD, 0x2FFF, 0x2FFD, 0x0003, 0x0002, 0x2FFE, 
      0x3000, 0x0001, 0x0005, 0x2FFF, 0x2FFF, 0x0000, 0x0003, 0x3000, 
      0x0006, 0x0001, 0x2FFF, 0x3000, 0x0002, 0x0002, 0x0001, 0x0003, 
      0x0000, 0x2FFD, 0x3000, 0x0003, 0x2FFC, 0x0002, 0x2FFE, 0x0002, 
      0x2FFF, 0x0001, 0x0003, 0x3000, 0x0001, 0x0004, 0x2FFE, 0x2FFE, 
      0x2FFC, 0x0000, 0x0000, 0x3000, 0x0003, 0x0004, 0x0000, 0x0003, 
      0x2FFE, 0x0000, 0x2FFF, 0x0002, 0x3000, 0x3000, 0x0000, 0x0002, 
      0x0000, 0x0002, 0x0004, 0x0003, 0x2FFF, 0x0002, 0x3000, 0x0000, 
      0x0000, 0x0002, 0x2FFE, 0x3000, 0x0000, 0x2FFE, 0x0003, 0x0002, 
      0x2FFC, 0x3000, 0x0001, 0x0001, 0x0002, 0x0001, 0x0002, 0x0000, 
      0x2FF6, 0x0002, 0x2FFF, 0x0003, 0x2FFD, 0x0001, 0x0000, 0x0000, 
      0x3000, 0x0001, 0x2FFF, 0x2FFF, 0x0000, 0x0003, 0x0002, 0x0001, 
      0x3000, 0x2FFC, 0x0005, 0x0001, 0x0001, 0x2FFE, 0x3000, 0x3000, 
      0x2FFC, 0x2FFD, 0x0001, 0x0000, 0x0004, 0x2FFB, 0x2FFB, 0x0001, 
      0x0001, 0x3000, 0x2FFD, 0x2FFD, 0x2FFC, 0x0003, 0x0004, 0x0003, 
      0x2FFD, 0x0001, 0x2FFF, 0x0001, 0x0003, 0x0003, 0x0002, 0x2FFE, 
      0x0001, 0x2FFA, 0x3000, 0x0002, 0x3000, 0x0004, 0x0002, 0x2FFE, 
      0x2FFB, 0x2FFB, 0x0003, 0x2FFD, 0x0002, 0x2FFD, 0x0000, 0x0003, 
      0x2FFD, 0x3000, 0x3000, 0x0000, 0x0004, 0x2FFF, 0x0004, 0x0006, 
      0x3000, 0x0002, 0x0002, 0x2FFF, 0x0005, 0x3000, 0x0006, 0x2FFD, 
      0x0002, 0x2FFB, 0x3000, 0x3000, 0x3000, 0x0002, 0x2FFC, 0x2FFF, 
      0x0000, 0x2FFD, 0x3000, 0x0001, 0x0000, 0x0003, 0x0001, 0x0003, 
      0x0001, 0x0001, 0x0000, 0x0000, 0x0001, 0x0004, 0x0000, 0x3000, 
      0x3000, 0x2FFE, 0x2FFD, 0x0001, 0x3000, 0x2FFF, 0x2FFE, 0x3000, 
      0x2FFE, 0x0002, 0x0000, 0x0003, 0x0003, 0x2FFF, 0x0005, 0x0004, 
      0x0001, 0x2FFE, 0x0000, 0x3000, 0x2FFF, 0x2FFD, 0x0003, 0x0002, 
      0x0001, 0x2FFE, 0x0000, 0x2FFF, 0x0002, 0x3000, 0x0000, 0x0003, 
      0x2FFD, 0x0000, 0x0000, 0x3000, 0x0001, 0x2FFF, 0x0002, 0x0002, 
      0x3000, 0x0003, 0x0002, 0x3000, 0x3000, 0x0001, 0x0003, 0x0003, 
      0x0000, 0x2FFF, 0x0003, 0x2FFF, 0x0001, 0x2FFD, 0x0002, 0x2FFF, 
      0x2FFE, 0x3000, 0x0008, 0x2FFF, 0x0003, 0x2FFD, 0x2FFB, 0x0002, 
      0x3000, 0x0002, 0x0001, 0x2FFE, 0x0002, 0x0001, 0x3000, 0x2FFC, 
      0x0003, 0x2FFE, 0x0005, 0x2FFF, 0x2FFD, 0x2FFD, 0x2FFC, 0x2FFF, 
      0x2FFC, 0x2FFE, 0x0002, 0x0001, 0x0000, 0x0002, 0x0003, 0x2FFD, 
      0x2FFF, 0x0005, 0x0000, 0x0003, 0x3000, 0x0003, 0x0003, 0x2FFF, 
      0x0005, 0x0000, 0x2FFE, 0x0003, 0x0004, 0x2FFF, 0x0002, 0x0005, 
      0x0003, 0x0000, 0x3000, 0x0005, 0x0002, 0x0000, 0x2FFE, 0x2FFE, 
      0x3000, 0x2FFE, 0x2FFF, 0x0001, 0x0000, 0x0002, 0x0001, 0x2FFD, 
      0x0001, 0x0001, 0x0001, 0x2FFE, 0x3000, 0x0001, 0x0002, 0x0001, 
      0x0004, 0x0003, 0x0002, 0x0000, 0x2FFB, 0x0004, 0x0004, 0x0004, 
      0x0001, 0x3000, 0x2FFE, 0x2FFF, 0x2FFF, 0x3000, 0x2FFE, 0x2FFF, 
      0x2FFF, 0x0003, 0x2FFF, 0x0002, 0x3000, 0x3000, 0x0003, 0x0003, 
      0x2FFF, 0x0005, 0x2FFF, 0x0001, 0x2FFF, 0x0001, 0x0001, 0x2FFF, 
      0x0002, 0x0002, 0x0000, 0x0000, 0x2FFF, 0x0004, 0x2FFF, 0x0001, 
      0x0003, 0x0004, 0x0006, 0x0002, 0x0002, 0x2FFF, 0x0001, 0x0002, 
      0x2FFE, 0x0000, 0x2FFE, 0x0002, 0x0001, 0x2FFE, 0x0004, 0x2FFF, 
      0x2FFF, 0x2FFF, 0x0002, 0x0002, 0x2FFF, 0x0001, 0x0003, 0x0002, 
      0x0000, 0x0000, 0x0001, 0x3000, 0x3000, 0x0000, 0x2FFE, 0x3000, 
      0x0002, 0x0001, 0x2FFC, 0x0001, 0x0000, 0x3000, 0x0002, 0x3000, 
      0x0001, 0x2FFF, 0x0002, 0x0006, 0x0003, 0x0002, 0x3000, 0x0004, 
      0x0000, 0x2FFF, 0x2FFE, 0x2FFF, 0x3000, 0x2FFF, 0x0000, 0x0000, 
      0x0000, 0x2FFB, 0x0004, 0x2FFD, 0x2FFE, 0x0003, 0x0001, 0x0005, 
      0x2FFB, 0x2FFE, 0x0001, 0x0003, 0x2FFE, 0x0004, 0x0001, 0x0003, 
      0x2FFE, 0x0004, 0x3000, 0x0001, 0x0001, 0x3000, 0x2FFF, 0x3000, 
      0x0001, 0x2FFF, 0x2FFE, 0x0000, 0x0001, 0x0002, 0x2FFD, 0x0001, 
      0x3000, 0x0005, 0x0006, 0x3000, 0x0002, 0x0008, 0x0001, 0x2FFD, 
      0x0002, 0x0003, 0x0000, 0x2FFC, 0x3000, 0x0001, 0x0000, 0x0001, 
      0x0003, 0x3000, 0x0003, 0x0002, 0x2FFD, 0x2FFF, 0x0006, 0x2FFF, 
      0x0004, 0x2FFE, 0x0001, 0x2FFF, 0x0003, 0x0002, 0x3000, 0x3000, 
      0x2FFE, 0x0002, 0x0001, 0x0000, 0x0001, 0x0000, 0x3000, 0x0001, 
      0x0001, 0x0004, 0x2FFC, 0x0003, 0x2FFF, 0x2FFE, 0x0001, 0x3000, 
      0x2FFF, 0x0005, 0x3000, 0x3000, 0x2FFE, 0x0002, 0x2FFF, 0x3000, 
      0x0001, 0x0000, 0x2FFB, 0x2FFE, 0x2FFB, 0x2FFF, 0x0001, 0x2FFE, 
      0x0000, 0x0001, 0x0001, 0x0004, 0x2FFE, 0x0001, 0x2FFF, 0x3000, 
      0x0001, 0x0000, 0x0000, 0x0004, 0x0000, 0x0004, 0x0003, 0x0000, 
      0x2FFE, 0x2FFF, 0x2FFF, 0x0004, 0x2FFD, 0x0002, 0x0004, 0x0000, 
      0x0003, 0x2FFB, 0x2FFF, 0x3000, 0x3000, 0x0004, 0x2FFE, 0x0005, 
      0x0002, 0x0004, 0x3000, 0x2FFE, 0x0001, 0x0003, 0x0000, 0x0003, 
      0x2FFD, 0x0001, 0x0003, 0x3000, 0x3000, 0x0001, 0x0000, 0x0001, 
      0x2FFF, 0x3000, 0x2FFD, 0x3000, 0x0000, 0x2FFF, 0x0000, 0x0001, 
      0x2FFE, 0x2FFF, 0x2FFE, 0x3000, 0x3000, 0x2FFF, 0x2FFD, 0x0003, 
      0x0004, 0x3000, 0x0000, 0x0003, 0x0002, 0x0001, 0x3000, 0x0001, 
      0x0001, 0x0001, 0x3000, 0x0003, 0x0001, 0x2FFF, 0x2FFD, 0x2FFF, 
      0x3000, 0x2FFF, 0x0005, 0x0002, 0x0003, 0x3000, 0x2FFE, 0x0002, 
      0x0002, 0x2FFE, 0x2FFD, 0x2FFF, 0x0001, 0x2FFE, 0x0002, 0x0000, 
      0x0002, 0x0000, 0x0001, 0x0005, 0x0002, 0x0002, 0x0000, 0x3000, 
      0x0004, 0x0000, 0x2FFE, 0x3000, 0x0000, 0x2FFF, 0x2FFA, 0x0001, 
      0x0000, 0x0000, 0x2FFD, 0x0001, 0x0002, 0x2FFE, 0x0000, 0x0005, 
      0x0002, 0x0001, 0x0001, 0x2FFE, 0x0005, 0x0000, 0x3000, 0x0006, 
      0x0000, 0x0003, 0x2FFC, 0x0006, 0x3000, 0x3000, 0x2FFF, 0x2FFF, 
      0x0000, 0x0005, 0x0003, 0x0000, 0x0000, 0x2FFE, 0x2FFE, 0x2FFF, 
      0x0003, 0x0004, 0x2FFD, 0x0003, 0x0000, 0x2FFF, 0x3000, 0x3000, 
      0x0000, 0x0002, 0x2FFF, 0x2FFF, 0x2FFE, 0x0000, 0x3000, 0x3000, 
      0x0001, 0x0001, 0x0002, 0x2FFF, 0x2FFF, 0x2FFD, 0x2FFE, 0x0003, 
      0x0000, 0x3000, 0x0002, 0x2FFC, 0x0000, 0x3000, 0x2FFF, 0x0000, 
      0x0002, 0x0006, 0x2FFE, 0x3000, 0x0001, 0x2FFE, 0x0000, 0x0002 } );
    
    return new RlwePrivateKey (test, Constants.ORDINARY);
  }
}
